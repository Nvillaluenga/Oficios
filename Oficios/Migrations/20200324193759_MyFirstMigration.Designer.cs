// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oficios.Data;

namespace Oficios.Migrations
{
    [DbContext(typeof(OficioDbContext))]
    [Migration("20200324193759_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Oficios.Models.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("JobPlaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("Opinion")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WorkerUserId")
                        .HasColumnType("int");

                    b.HasKey("JobId");

                    b.HasIndex("SkillId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkerUserId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            JobId = 1,
                            JobPlaced = new DateTime(2020, 3, 24, 16, 37, 59, 214, DateTimeKind.Local).AddTicks(1420),
                            Opinion = "A pretty good worker.",
                            Score = 5,
                            SkillId = 1,
                            UserId = 1,
                            WorkerUserId = 3
                        });
                });

            modelBuilder.Entity("Oficios.Models.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("SkillCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkerUserId")
                        .HasColumnType("int");

                    b.HasKey("SkillId");

                    b.HasIndex("SkillCategoryId");

                    b.HasIndex("WorkerUserId");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            SkillId = 1,
                            Description = "Various Jobs you know",
                            Name = "General Mantainance",
                            SkillCategoryId = 2
                        },
                        new
                        {
                            SkillId = 2,
                            Description = "change cables and stuff you know",
                            Name = "Change installation",
                            SkillCategoryId = 2
                        },
                        new
                        {
                            SkillId = 3,
                            Description = "Various Jobs you know",
                            Name = "General Mantainance",
                            SkillCategoryId = 1
                        },
                        new
                        {
                            SkillId = 4,
                            Description = "fix toilet and stuff you know",
                            Name = "Fix toilet",
                            SkillCategoryId = 1
                        });
                });

            modelBuilder.Entity("Oficios.Models.SkillCategory", b =>
                {
                    b.Property<int>("SkillCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("SkillCategoryId");

                    b.ToTable("SkillCategories");

                    b.HasData(
                        new
                        {
                            SkillCategoryId = 1,
                            Description = "Plomber stuff you know",
                            Name = "Plomber"
                        },
                        new
                        {
                            SkillCategoryId = 2,
                            Description = "Electrical technician stuff you know",
                            Name = "Electrical technician"
                        });
                });

            modelBuilder.Entity("Oficios.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "Houssay 1925",
                            Email = "nachovillaluenga@gmail.com",
                            LastName = "Villaluenga",
                            Name = "Nacho",
                            PostalCode = 0
                        },
                        new
                        {
                            UserId = 2,
                            Address = "Houssay 2925",
                            Email = "nachovillaluenga2@gmail.com",
                            LastName = "Villaluenga2",
                            Name = "Nacho 2",
                            PostalCode = 0
                        });
                });

            modelBuilder.Entity("Oficios.Models.Worker", b =>
                {
                    b.HasBaseType("Oficios.Models.User");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Worker");

                    b.HasData(
                        new
                        {
                            UserId = 3,
                            Address = "work street 1",
                            Email = "worker@gmail.com",
                            LastName = "Walker",
                            Name = "Worker",
                            PostalCode = 0,
                            Description = "Some description."
                        });
                });

            modelBuilder.Entity("Oficios.Models.Job", b =>
                {
                    b.HasOne("Oficios.Models.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Oficios.Models.User", "User")
                        .WithMany("JobsReceived")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Oficios.Models.Worker", "Worker")
                        .WithMany("JobsMade")
                        .HasForeignKey("WorkerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Oficios.Models.Skill", b =>
                {
                    b.HasOne("Oficios.Models.SkillCategory", "SkillCategory")
                        .WithMany()
                        .HasForeignKey("SkillCategoryId");

                    b.HasOne("Oficios.Models.Worker", null)
                        .WithMany("Skills")
                        .HasForeignKey("WorkerUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
